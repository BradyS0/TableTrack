name: Build API Server

on: [pull_request]

jobs:
  build-api:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:16
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydb_test
        ports:
          - 5433:5432
        options: >-
          --health-cmd="pg_isready -U user -d mydb_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      NODE_ENV: development
      DB_USER: user
      DB_PASS: password
      DB_NAME: mydb_test
      DB_HOST: db
      DB_PORT: 5433

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: ./source/backend
        run: npm ci

      - name: Build and run API Docker image
        working-directory: ./source/backend
        run: docker compose up --build -d

      - name: Wait for API + DB
        working-directory: ./source/backend
        run: |
          echo "Checking API connection to DB..."
          for i in {1..20}; do
            if curl -s http://localhost:3000/health > /dev/null; then
              echo "API is running and connected to DB"
              exit 0
            fi
            echo "Waiting..."
            sleep 3
          done
          echo "API failed to connect to DB in time"
          docker compose logs
          exit 1

      - name: Stop containers
        if: always()
        working-directory: ./source/backend
        run: docker compose down
