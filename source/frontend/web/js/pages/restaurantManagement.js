import {api} from '../global.js'
import { getUserState } from '../utils.js';
import { loadRestaurant } from './restaurantDetail.js';

document.addEventListener("DOMContentLoaded", async () => {
  const owner = getUserState()
  if(owner.restID){
    await loadRestaurant(owner.restID)
    const reservationBtn = document.querySelector(".reservation-btn");
    reservationBtn.parentElement.removeChild(reservationBtn);

    loadEditableFields();
  }
  //load edit icons
});

function loadEditableFields() {
  const editButton = document.createElement("button");
  editButton.innerText = "Edit Details";
  editButton.classList.add("edit-btn", "btn");

  const restaurant_header = document.querySelector("#restaurant-name");
  restaurant_header.append(editButton);

  editButton.addEventListener("click", () => {
    document.querySelector("body").appendChild(createEditPopup());
  });
}

function createEditPopup() {
  // Main popup container
  const popup = document.createElement("div");
  popup.id = "edit-Popup";
  popup.classList.add("popup");

  // Popup content
  const content = document.createElement("div");
  content.classList.add("popup-content");

  // Close button
  const closeBtn = document.createElement("button");
  closeBtn.classList.add("close-btn");
  closeBtn.id = "closeSignup";
  closeBtn.innerHTML = "&times;";

  closeBtn.addEventListener("click", () => {
    popup.parentElement.removeChild(popup);
  });

  // Header
  const heading = document.createElement("h2");
  heading.textContent = "Edit Restaurant Details";

  // Form
  const form = document.createElement("form");
  form.id = "edit-form";

  // Input: Restaurant Name
  const nameInput = document.createElement("input");
  nameInput.type = "text";
  nameInput.id = "rest-name";
  nameInput.placeholder = "Restaurant Name";
  nameInput.required = "true";

  // Input: Tags
  const tagsInput = document.createElement("input");
  tagsInput.type = "text";
  tagsInput.id = "rest-tags";
  tagsInput.placeholder = "tags, separated, by commas";
  tagsInput.required = true;
  tagsInput.minLength = 3;

  // Input: Location
  const locationInput = document.createElement("input");
  locationInput.type = "text";
  locationInput.id = "rest-location";
  locationInput.placeholder = "123 Main St, Toronto, Canada";
  locationInput.required = true;
  locationInput.minLength = 10;
  locationInput.pattern = "^\\d+[\\w\\s]*,\\s*[\\w\\s]+,\\s*[\\w\\s]+$"; //generated by Grok
  locationInput.title =
    "Enter an address like '123 Main St, Toronto, Canada' with at least one number in the street, followed by two commas separating street, city, and country/province.";

  // Input: Phone number
  const phoneInput = document.createElement("input");
  phoneInput.type = "tel";
  phoneInput.id = "rest-phone";
  phoneInput.placeholder = "Phone: +1 204 123 1234";
  phoneInput.required = true;
  phoneInput.pattern = "^\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}$" // "^[+]?[\\s\\-\\(\\)0-9]{10,20}$"; //generated by Grok
  phoneInput.title = "Enter a valid phone number: (111) 111-111";


  // Save Button
  const saveBtn = document.createElement("button");
  saveBtn.type = "submit";
  saveBtn.classList.add("save-btn", "btn");
  saveBtn.textContent = "Save Changes";

  // Build form
  form.append(nameInput, tagsInput, locationInput, phoneInput, saveBtn);

  // Assemble popup
  content.append(closeBtn, heading, form);
  popup.appendChild(content);

  saveEditChanges(form, nameInput, tagsInput, locationInput, phoneInput, popup);
  // Return the full popup element

  return popup;
}

function saveEditChanges(
  form,
  input_name,
  input_tags,
  input_location,
  input_phone,
  popup
) {
  const rest_name = document.querySelector("#restaurant-name>h1");
  const tags = document.querySelector(".tags");
  const location = document.querySelector("#restaurant-location>span");
  const phone = document.querySelector("#restaurant-phone>span");
 
  let old_tags = [...tags.querySelectorAll("p")]
  .map((tag) => `${tag.innerText},`)
  .join("");
  
  input_tags.value = old_tags.slice(0, -1);
  input_name.value = rest_name.innerText;
  input_location.value = location.innerText;
  input_phone.value = phone.innerText;

  let oldName = rest_name.innerText;
  let oldLocation = location.innerText;
  old_tags = input_tags.value
  let oldPhone = phone.innerText

  form.addEventListener("submit", async(e) => {
    e.preventDefault();
    const owner = getUserState()

    if (form.checkValidity()) {
      const new_tags = input_tags.value
        .split(",")
        .filter((tag) => tag.length > 2);

      //make request to back end
      if(old_tags !== input_tags.value){
        const res = await api.changeRestaurantTags(owner.restID, owner.userID,new_tags)
        if (res.code===200)
          tags.innerHTML = new_tags.map((tag) => `<p>${tag}</p>`).join("");
      }

      if(oldName !== input_name.value){
        const res = await api.changeRestaurantName(owner.restID, owner.userID,input_name.value)
        if (res.code===200)
          rest_name.innerText = input_name.value; //set the new restaurant name
      }

      if(oldLocation !== input_location.value){
        const res = await api.changeRestaurantAddress(owner.restID, owner.userID, input_location.value)
        if(res.code===200)
          location.innerText = input_location.value
      }

      if(oldPhone !== input_phone.value){
        const res = await api.changeRestaurantPhone(owner.restID, owner.userID, input_phone.value)
        if (res.code === 200)
          phone.innerText = input_phone.value;
      }
      popup.parentElement.removeChild(popup);
    }
  });
}
