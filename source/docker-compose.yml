services:
  db:
    image: postgres:16
    container_name: db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      # Ensure the DB is created at init with the requested name (fallback to mydb_test)
      POSTGRES_DB: ${DB_NAME:-mydb_test}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  api:
    build: ./backend
    container_name: api
    depends_on:
      - db
    environment:
      PORT: ${API_PORT}
      API_PORT: ${API_PORT}
      NODE_ENV: ${NODE_ENV}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: localhost
      DB_PORT: ${DB_PORT}
    ports:
      - "${API_PORT}:${API_PORT}"
    networks:
      - app-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    entrypoint: ["bash", "-c", "while ! (echo > /dev/tcp/db/5432) >/dev/null 2>&1; do echo 'Waiting for Postgres at db:5432...'; sleep 1; done; echo 'Postgres is up - starting app'; npm start"]

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
